#include<string>
#include<iostream>
using namespace std;
class personelinfo {
private:
	string name;
	int CNIC;
	int age;
public:
	personelinfo() {
		CNIC = 0;
		age = 0;
	}
	void set_name(string n) {
		name = n;
	}
	void set_cnic(int c) {
		CNIC = c;
	}
	void set_age(int a)
	{
		age = a;
	}

	//getteres

	string get_name() {
		return name;
	}
	int get_age() {
		return age;
	}
	int get_cnic() {
		return CNIC;
	}

};
class pri_que {
private:
	int count;
	int size;
	int front;
	int rear;
	personelinfo* obj;
public:

	pri_que() {
		cout << "enter the size of queue :";
		cin >> size;
		count = 0;
		rear = front = -1;
		obj = new personelinfo[size];
	}

	bool isempty() {
		if (front == -1 && rear == -1) {
			return true;
		}
		else
			return false;
	}
	bool isfull() {
		if (count == size) {
			return true;
		}
		else
			return false;
	}

	void enque(personelinfo PI) {
		if (front == -1) {
			front++;
		}
		if (!isfull()) {
			rear = (rear + 1) % size;
			obj[rear] = PI;
			count++;
		}
		else {
			cout << "queue is full !! " << endl;
		}

	}
	void deque() {
		if (!isempty())
		{
			front = (front + 1) % size;
			count--;
		}
		else
		{
			cout << "nothing to delete : " << endl;
		}
	}

	void display() {
		if (front < rear) {
			cout << "before deque " << endl;
			for (int i = front; i <= rear; i++) {
				cout <<"name : "<< obj[i].get_name() << endl;
				cout <<"age  : "<<obj[i].get_age()<<endl;
				cout <<"CNIC :"<< obj[i].get_cnic()<<endl;
			}
		}
		
		else {
			cout << "after deque display " << endl;
			for (int j = 0; j < size; j++) {
				cout << "name : " << obj[j].get_name() << endl;
				cout << "age  : " << obj[j].get_age() << endl;
				cout << "CNIC :" << obj[j].get_cnic() << endl;
			}
			cout << endl;
			cout << "2nd loop " << endl;
			for (int k = 0; k <= front; k++) {
				cout << "name : " << obj[k].get_name() << endl;
				cout << "age  : " << obj[k].get_age() << endl;
				cout << "CNIC :" << obj[k].get_cnic() << endl;
			}
		}

	}


	void PR() {

		int a, b;
		personelinfo* p;
		p = new personelinfo[1];

		for (int i = 0; i < rear+1; i++) {

			for (int j = 0; j < i + 1; j++) {

				a = obj[i].get_age();
				b = obj[j].get_age();
				if (a > b) {
					p[0] = obj[i];
					obj[i] = obj[j];
					obj[j] = p[0];

				}
			}
		}

		for (int i = 0; i < rear+1; i++) {
			cout << "Age :> " << obj[i].get_age() << endl;
		}

	}

};
void main() {
	int age;
	int Cnic;
	string name;
	personelinfo pr;
	pri_que pq;

	int choice=0;
	do {
		cout << " 1. for Enque \n 2. Deque \n 3. Display \n 4. check priority \n 0. Exit  " << endl;
		cin >> choice;
		switch (choice)
		{
		case 1:
			cout << "enter the name :..";
			cin >> name;
			cout << "enter the age :..";
			cin >> age;
			cout << "Enter the CNIC :...";
			cin >> Cnic;

			pr.set_name(name);
			pr.set_age(age);
			pr.set_cnic(Cnic);

			pq.enque(pr);

			cout << ">>>>>>>> DONE <<<<<<<<" << endl;

			system("pause");
			system("cls");
			break;
		case 2:

			pq.deque();
			system("pause");
			system("cls");
			break;

		case 3:
			pq.display();
			system("pause");
			system("cls");
			break;

		case 4:
			pq.PR();
			system("pause");
			system("cls");
			break;
		case 0:
			cout << "is it's working " << endl;
		}
	} while (choice != 0);
	system("pause");
}